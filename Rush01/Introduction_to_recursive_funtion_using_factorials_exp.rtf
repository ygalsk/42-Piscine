{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33600\viewh18680\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Recursive function:\
\
1. Step: divide your problem in smaller steps\
2. Step: specify the base condition to stop recursion. (Very important!!!)\
	if not: recursion won\'92t stop\
\
Example:\
\
Calculate the factorial of a number!\
	\
	factorial of 5 = 5 * 4 * 3 * 2 * 1 = 120\
\
Basic structure of any recursive function:\
\
Fact()\
\{\
	if( )\
	\{\
		\'85..\
	\}\
	else\
	\{\
		\'85..\
	\}\
\}\
\
 In any recursive function you will specify the base case in the if construct. While in the else construct you will specify the recursive procedure.\
To write a recursive function you need to start at the recursive procedure and then move to the base case.\
So:\
\
If()\
\{				this is 2nd (base case)\
\}\
\
Else\
\{	\
					this is first (recursive procedure)\
\}\
\
Step 1:	\
		Calculate Fact(4)\
\
	Fact(1) = 1\
	\
	Fact(2) = 2 * 1 = 2 * Fact(1)\
\
	Fact(3) = 3 * 2 * 1 = 3 * Fact(2)\
\
	Fact(4) = 4 * 3 * 2 * 1= 4 * Fact(3)\
\
So if you want a more flexible approach you could use a variable.\
For example:\
\
	Fact(n) = n * Fact(n-1)\
\
\
Going back to our recursive function \
\
\
\
Fact(int n)\
\{\
	if( )\
	\{\
		\'85..\
	\}\
	else\
	\{\
		return n* Fact(n -1);\
	\}\
\}\
\
\
Step 2:\
		specifying our base condition to stop the recursion\
\
		Base condition is the one with doesn\'92t require to call some functions again and helps in stopping the recursion.\
\
So for example:\
\
	Fact(1) = 1\
	\
	Fact(2) = 2 * 1 = 2 * Fact(1)\
\
	Fact(3) = 3 * 2 * 1 = 3 * Fact(2)\
\
	Fact(4) = 4 * 3 * 2 * 1= 4 * Fact(3)\
\
In this case the Fact(1) is not calling any other functions, because the Fact(1) will always be just 1, we also could use the Fact(2) because calling the Fact(1) doesn\'92t need to be called again, we could simply use Fact(2) = 2* 1as our base condition\
\
Going back to our structure of the recursive function:\
\
\
\
Fact(int n)\
\{\
	if(n == 1)\
	\{\
		return 1;\
	\}\
	else\
	\{\
		return n* Fact(n -1);\
	\}\
\}\
\
So for solving our Problem, calculating the Factorial of a number we could write our code like this:\
\
\
#include <stdio.h>\
\
int fact(int n)\
\{\
	if(n == 1)\
		return 1;\
	else	\
		return n*fact(n-1);\
\}\
\
// to print out the solution we can use a main function like this:\
\
int main ()\
\{\
	int n;\
\
	printf(\'93Enter the number: \'93);\
	scanf(\'93%d\'94, &n);\
	printf(\'93Factorial of a number %d is %d\'94, n ,fact(n));\
\}\
\
\
\
}